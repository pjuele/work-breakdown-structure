generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Deliverable {
  tennantId String       // @unique
  id        Int          @id @default(autoincrement()) //String        @id @db.VarChar(3) // 
  name      String       @db.VarChar(255)
  startDate DateTime?    @default(dbgenerated("CURRENT_DATE")) @db.Date
  phaseId   String
  parent    ProjectPhase @relation(fields: [phaseId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  elements  Element[]
}

model Project {
  tennantId    String         // @unique
  id           String         @id @db.VarChar(3) // @default(autoincrement())
  name         String?        @db.VarChar(255)
  color        String         @db.VarChar(50)
  clientId     String
  client       Client         @relation(fields: [clientId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  phases       ProjectPhase[]
}

model ProjectPhase {
  tennantId    String        // @unique
  id           String        @id @db.VarChar(3) // @default(autoincrement())
  name         String?       @db.VarChar(255)
  // color        String        @db.VarChar(50)
  projectId    String
  project      Project       @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  deliverables Deliverable[]
}


model Client {
  tennantId    String        // @unique
  id           String        @id @db.VarChar(3) // @default(autoincrement())
  name         String?       @db.VarChar(255)
  color        String        @db.VarChar(50)
  logoUrl      String        @db.VarChar(255)
  projects Project[]
}

model Element {
  tennantId     String      // @unique
  id            Int         @id @default(autoincrement())
  name          String      @db.VarChar(255)
  size          String      @db.VarChar(2)
  deliverableId Int
  // assignedToId  Int
  // assignedTo    TeamMember  @relation(fields: [assignedToId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  parent        Deliverable @relation(fields: [deliverableId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

// model TeamMember {
//   id               Int       @id @default(autoincrement())
//   name             String?   @db.VarChar(255)
//   assignedElements Element[]
// }
